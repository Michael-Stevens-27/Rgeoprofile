% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mainFunctions.R
\name{geoPlotLorenz}
\alias{geoPlotLorenz}
\title{Produce Lorenz Plot}
\usage{
geoPlotLorenz(hit_scores, crimeNumbers = NULL, suspects_col = "red",
  crimes_col = "blue")
}
\arguments{
\item{hit_scores}{object in the format defined by geoReportHitscores().}

\item{crimeNumbers}{optional vector with numbers of crimes per suspect site.}
}
\description{
Produces a Lorenz plot showing the proportion of suspect sites or cimes identified as a function of area and calculates
the corresponding Gini coefficient using trapezoid rule.
Also allows an optional vector called crimeNumbers with numbers of crimes per suspect site; tthe length of this vector
should equal the number of suspect sites. If this is present, the function calculates and returns the Gini coefficient 
based on the number of crimes; otherwise, this is calculated based on the number of suspect sites.
}
\examples{
# john snow cholera data
data(Cholera)
d <- geoData(Cholera[,1],Cholera[,2])
data(WaterPumps)
s <- geoDataSource(WaterPumps[,1], WaterPumps[,2])
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, 
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), 
priorMean_latitude = mean(d$latitude), guardRail = 0.1)
m <- geoMCMC(data = d, params = p)
gp <- m$geoProfile
geoPlotMap(params = p, data = d, source = s, breakPercent = seq(0, 50, 5), mapType = "hybrid",
contourCols = c("red", "orange", "yellow", "white"), crimeCol = "black", crimeBorderCol = "white", 
crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = gp)
hs <- geoReportHitscores(params=p,source_data=s,surface=m$surface)
# Lorenz plot
geoPlotLorenz(hit_scores=hs)

# simulated data
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = 
51.5235505, alpha=1, sigma=1, tau=3)
d <- geoData(sim$longitude, sim $latitude)
s <- geoDataSource(sim$source_lon, sim$source_lat)
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, 
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), 
priorMean_latitude = mean(d$latitude), guardRail = 0.1)
m <- geoMCMC(data = d, params = p)
gp <- m$geoProfile
# changing the colour palette, background map, transparency and range of geoprofile to plot
geoPlotMap(params = p, data = d, source = s,breakPercent = seq(0, 30, 5), mapType = "terrain", 
contourCols=c("blue","white"),crimeCol="black", crimeBorderCol="white",crimeCex=2,
sourceCol = "red", sourceCex = 2, surface = gp, transparency = 0.7)
hs <- geoReportHitscores(params=p,source_data=s,surface=m$surface)#' geoPlotLorenz(hit_scores=hs)
# Lorenz plot using number of incidents per source
cr <- table(sim$group)
geoPlotLorenz(hit_scores=hs,crimeNumbers=cr)
}
