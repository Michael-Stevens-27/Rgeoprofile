?geoParams
document()
library(devtools)
document()
?geoReportHitscores
data(Cholera)#
d <- geoData(Cholera[,1],Cholera[,2])#
data(WaterPumps)#
s <- geoDataSource(WaterPumps[,1], WaterPumps[,2])#
p <- geoParams(data=d,sigma_mean=1.0,sigma_squared_shape=2,samples=20000,chains=10,#
burnin=1000,priorMean_longitude=mean(dat$longitude),#
priorMean_latitude=mean(dat$latitude),guardRail=0.1)#
m <- geoMCMC(data=d,params=p)#
gp <- geoProfile(surface=m$surface)#
hs <- geoReportHitscores(params=p,source_data=s,surface=m$surface)
document()
?geoReportHitscores
document()
geoReportHitscores
?geoReportHitscores
data(Cholera)#
d <- geoData(Cholera[,1],Cholera[,2])#
data(WaterPumps)#
s <- geoDataSource(WaterPumps[,1], WaterPumps[,2])#
p <- geoParams(data=d,sigma_mean=1.0,sigma_squared_shape=2,samples=20000,chains=10,#
burnin=1000,priorMean_longitude=mean(d$longitude),#
priorMean_latitude=mean(d$latitude),guardRail=0.1)#
m <- geoMCMC(data=d,params=p)#
gp <- geoProfile(surface=m$surface)#
hs <- geoReportHitscores(params=p,source_data=s,surface=m$surface)
hs
library(devtools)
document()
library(devtools)
document()
?geoReportHitscores
document()
?geoReportHitscores
document()
?geoReportHitscores
library(devtools)
document()
?geoMCMC
document()
?geoMCMC
document()
?geoMCMC
data(Cholera)#
d <- geoData(Cholera[,1],Cholera[,2])#
p <- geoParams(data=d,sigma_mean=1.0,sigma_squared_shape=2,samples=20000,chains=10,#
burnin=1000,priorMean_longitude=mean(d$longitude),priorMean_latitude=mean(d$latitude),#
guardRail=0.1)#
m <- geoMCMC(data=d,params=p)
library(devtools)#
document()
?geoMCMC
library(devtools)
document()
?geoMCMC
library(devtools)#
document()
# then run the following#
library(RgeoProfile)#
path <- "~/GitHub/Rgeoprofile"#
system(paste(shQuote(file.path(R.home("bin"), "R")),"CMD", "Rd2pdf", shQuote(path)))
library(devtools)
document()
?geoParamsCheck
data(Cholera)#
d <- geoData(Cholera[,1],Cholera[,2])#
p <- geoParams(data=d,sigma_mean=1.0,sigma_squared_shape=2,samples=20000,chains=10,burnin=1000,#
priorMean_longitude=mean(d$longitude),priorMean_latitude=mean(d$latitude),guardRail=0.1)#
geoParamsCheck(p)
library(devtools)
document()
?geoData
document()
?geoDataSource
# john snow cholera data#
data(WaterPumps)#
geoDataSource(WaterPumps[,1], WaterPumps[,2])#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
s <- geoDataSource(sim$source_longitude, sim$source_latitude)
s
document()
?geoDataSource
# john snow cholera data#
data(WaterPumps)#
geoDataSource(WaterPumps[,1], WaterPumps[,2])#
#
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
s <- geoDataSource(sim$source_longitude, sim$source_latitude)#
s
document()
?geoDataSource
?geoParams
document()
?geoParams
# john snow cholera data#
data(Cholera)#
d <- geoData(Cholera[,1],Cholera[,2])#
# define prior so that the model fits sigma from the data#
geoParams(data= d, sigma_mean = 1.0 ,sigma_squared_shape = 2, samples = 20000, chains = 10,
document()
?geoParams
document()
?geoParams
document()
?geoParams
# john snow cholera data#
data(Cholera)#
d <- geoData(Cholera[,1],Cholera[,2])#
# define prior so that the model fits sigma from the data#
geoParams(data= d, sigma_mean = 1.0 ,sigma_squared_shape = 2, samples = 20000, chains = 10, #
burnin = 1000, priorMean_longitude=mean(d$longitude), priorMean_latitude = #
mean(d$latitude), guardRail = 0.1)
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
s <- geoDataSource(sim$source_longitude, sim$source_latitude)#
# use a fixed value of sigma#
geoParams(data = d, source = s, sigma_mean = 1.0, sigma_var = 0, samples = 20000, chains=10, #
burnin=1000,priorMean_longitude=mean(d$longitude), priorMean_latitude = mean(d$latitude), #
guardRail = 0.1)
document()
?geoParams
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
# use a fixed value of sigma#
geoParams(data = d, sigma_mean = 1.0, sigma_var = 0, samples = 20000, chains=10, #
burnin=1000,priorMean_longitude=mean(d$longitude), priorMean_latitude = mean(d$latitude), #
guardRail = 0.1)
document()
?geoParamsCheck
# john snow cholera data#
data(Cholera)#
d <- geoData(Cholera[,1],Cholera[,2])#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
geoParamsCheck(p)
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(Cholera[,1], Cholera[,2])#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
geoParamsCheck(p)
# john snow cholera data#
data(Cholera)d <- geoData(Cholera[,1], Cholera[,2])data(WaterPumps)s <- geoDataSource(WaterPumps[,1], WaterPumps[,2])p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), priorMean_latitude = mean(d$latitude), guardRail = 0.1)m <- geoMCMC(d, p)
document()
?geoPlotSigma
document()
?geoPlotSigma
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(Cholera[,1], Cholera[,2])#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
geoPlotSigma(params = p,sigma = m$sigma)
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
geoPlotSigma(params = p,sigma = m$sigma)
document()
?geoMCMC
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(Cholera[,1], Cholera[,2])#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)
document()
?geoProfile
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(Cholera[,1], Cholera[,2])#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
geoProfile(m$surface)
document()
?geoPLotMap
# john snow cholera data#
data(Cholera)#
d <- geoData(Cholera[,1],Cholera[,2])#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
gp <- geoProfile(m$surface)#
# basic map#
geoPlotMap(params=p,data=d,source=s,breakPercent=seq(0,50,5),mapType="hybrid",#
contourCols=c("red","orange","yellow","white"),crimeCol="black",crimeBorderCol="white",#
crimeCex=2,sourceCol="red",sourceCex=2,surface=gp)
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
gp <- geoProfile(m$surface)#
# changing the colour palette, background map, transparency and range of geoprofile to plot#
geoPlotMap(params=p, data=d, source=s,breakPercent=seq(0,30,5),mapType="terrain",#
contourCols=c("blue","white"),crimeCol="black", crimeBorderCol="white",crimeCex=2,#
sourceCol="red", sourceCex=2,surface=gp,transparency=0.7)
document()
?geoPlotMAp
# john snow cholera data#
data(Cholera)#
d <- geoData(Cholera[,1],Cholera[,2])#
data(WaterPumps)#
s <- geoDataSource(WaterPumps[,1], WaterPumps[,2])#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
gp <- geoProfile(m$surface)#
# basic map#
geoPlotMap(params = p, data = d, source = s, breakPercent = seq(0, 50, 5), mapType = "hybrid",#
contourCols = c("red", "orange", "yellow", "white"), crimeCol = "black", crimeBorderCol = "white", #
crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = gp)
geoPlotMap(params = p, data = d, source = s, breakPercent = seq(0, 50, 5), mapType = "hybrid",#
contourCols = c("red", "orange", "yellow", "white"), crimeCol = "black", crimeBorderCol = "white", #
crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = gp)
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
s <- geoDataSource(sim$source_lon, sim$source_lat)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
gp <- geoProfile(m$surface)#
# changing the colour palette, background map, transparency and range of geoprofile to plot#
geoPlotMap(params = p, data = d, source = s,breakPercent = seq(0, 30, 5), mapType = "terrain", #
contourCols=c("blue","white"),crimeCol="black", crimeBorderCol="white",crimeCex=2,#
sourceCol = "red", sourceCex = 2, surface = gp, transparency = 0.7)
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = 51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
s <- geoDataSource(sim$source_lon, sim$source_lat)
s
sim
table(sim$group)
table(sim$group)[1]
length(table(sim$group))
document()
?geoPlotLorenz
# john snow cholera data#
data(Cholera)#
d <- geoData(Cholera[,1],Cholera[,2])#
data(WaterPumps)#
s <- geoDataSource(WaterPumps[,1], WaterPumps[,2])#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
gp <- geoProfile(m$surface)#
geoPlotMap(params = p, data = d, source = s, breakPercent = seq(0, 50, 5), mapType = "hybrid",#
contourCols = c("red", "orange", "yellow", "white"), crimeCol = "black", crimeBorderCol = "white", #
crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = gp)#
hs <- geoReportHitscores(params=p,source_data=s,surface=m$surface)#
# Lorenz plot#
geoPlotLorenz(hit_scores=hs)
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
s <- geoDataSource(sim$source_lon, sim$source_lat)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
gp <- geoProfile(m$surface)#
# changing the colour palette, background map, transparency and range of geoprofile to plot#
geoPlotMap(params = p, data = d, source = s,breakPercent = seq(0, 30, 5), mapType = "terrain", #
contourCols=c("blue","white"),crimeCol="black", crimeBorderCol="white",crimeCex=2,#
sourceCol = "red", sourceCex = 2, surface = gp, transparency = 0.7)#
hs <- geoReportHitscores(params=p,source_data=s,surface=m$surface)#' geoPlotLorenz(hit_scores=hs)#
# Lorenz plot using number of incidents per source#
cr <- table(sim$group)#
geoPlotLorenz(hit_scores=hs,crimeNumbers=cr)
document()
?prob_coallocation
# john snow cholera data#
data(Cholera)#
d <- geoData(Cholera[,1],Cholera[,2])#
data(WaterPumps)#
s <- geoDataSource(WaterPumps[,1], WaterPumps[,2])#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
prob_coallocation(crime1=1,crime2=3,coallocation_matrix=m$allocation)
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
s <- geoDataSource(sim$source_lon, sim$source_lat)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
prob_coallocation(crime1=1,crime2=3,coallocation_matrix=m$allocation)
library(devtools)
document()
?geoPlotSigma
rm(list=ls())
ls()
load(system.file('extdata', 'rgp.Rdata', package = 'RgeoProfile'))#
geoPlotSigma(params = p,sigma = m$sigma)
library(RgeoProfile)
load(system.file('extdata', 'rgp.Rdata', package = 'RgeoProfile'))#
geoPlotSigma(params = p,sigma = m$sigma)
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude =
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude =51.5235505, alpha=1, sigma=1, tau=3)
sim
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude =51.5235505, alpha=1, sigma=1, tau=5)
sim
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude =51.5235505, alpha=1, sigma=1, tau=20)
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude =51.5235505, alpha=10, sigma=1, tau=3)
sim
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude =51.5235505, alpha=5, sigma=1, tau=3)
sim
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude =51.5235505, alpha=5, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)s <- geoDataSource(sim$source_lon, sim$source_lat)p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000,chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude),priorMean_latitude = mean(d$latitude), guardRail = 0.1)m <- geoMCMC(data = d, params = p)gp <- geoProfile(m$surface)#
geoPlotMap(params = p, data = d, source = s, breakPercent = seq(0, 50, 5), mapType = "hybrid",contourCols = c("red", "orange", "yellow", "white"), crimeCol = "black", crimeBorderCol = "white",crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = gp)
?geoData
eoMCMC(data = d, params = p)
geoMCMC(data = d, params = p)
library(devtools)
document()
library(devtools)
document()
library(devtools)
document()
?perspGP
library(RgeoProfile)
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
s <- geoDataSource(sim$source_lon, sim$source_lat)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
# raw probabilities#
perspGP(m$posteriorSurface,type="prob")#
# geoprofile#
perspGP(surface = m$geoProfile, aggregate_size = 3, type="gp")
document()
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
s <- geoDataSource(sim$source_lon, sim$source_lat)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
# raw probabilities#
perspGP(m$posteriorSurface,type="prob")#
# geoprofile#
perspGP(surface = m$geoProfile, aggregate_size = 3, type="gp")
?perspGP
# john snow cholera data#
data(Cholera)#
d <- geoData(Cholera[,1],Cholera[,2])#
data(WaterPumps)#
s <- geoDataSource(WaterPumps[,1], WaterPumps[,2])#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
# raw probabilities#
perspGP(m$posteriorSurface, surface_type = "prob")#
# geoprofile#
perspGP(surface = m$geoProfile, aggregate_size = 3, surface_type = "gp")
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=1, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
s <- geoDataSource(sim$source_lon, sim$source_lat)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2, samples = 20000, #
chains = 10, burnin = 1000, priorMean_longitude = mean(d$longitude), #
priorMean_latitude = mean(d$latitude), guardRail = 0.1)#
m <- geoMCMC(data = d, params = p)#
# raw probabilities#
perspGP(m$posteriorSurface, surface_type = "prob")#
# geoprofile#
perspGP(surface = m$geoProfile, aggregate_size = 3, surface_type = "gp")
perspGP(surface = m$geoProfile, aggregate_size = 10, surface_type = "gp")
document()
library(devtools)
document()
library(devtools)
document()
library(devtools)
document()
rm(list=ls())
ls()
library(devtools)
install.packages("~/GitHub/Rgeoprofile", repos = NULL, type = "source")
library(rgdal)
install.packages("~/GitHub/Rgeoprofile", repos = NULL, type = "source")
library(devtools)
library(RgeoProfile)
document()
library(devtools)
document()
?modelSources
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=10, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
s <- geoDataSource(sim$source_lon, sim$source_lat)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2)#
m <- geoMCMC(data = d, params = p)#
# extract sources identified by the model#
ms <- modelSources(mcmc = m, data = d)#
# plot data showing the sources identified by the model (note: NOT the actual suspect sites)#
geoPlotMap(data = d, source = ms, params = p, breakPercent = seq(0, 10, 1), mapType = "roadmap",#
contourCols =c("red", "orange","yellow","white"), crimeCol = "black", crimeCex = 2, #
sourceCol = "red", sourceCex = 2, surface = m$geoProfile,gpLegend=TRUE,opacity=0.4)
d
ms
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=10, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
s <- geoDataSource(sim$source_lon, sim$source_lat)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2)#
m <- geoMCMC(data = d, params = p)#
# extract sources identified by the model#
ms <- modelSources(mcmc = m, data = d)#
# plot data showing the sources identified by the model (note: NOT the actual suspect sites)#
geoPlotMap(data = d, source = ms$model_sources, params = p, breakPercent = seq(0, 10, 1), mapType = "roadmap",#
contourCols =c("red", "orange","yellow","white"), crimeCol = "black", crimeCex = 2, #
sourceCol = "red", sourceCex = 2, surface = m$geoProfile,gpLegend=TRUE,opacity=0.4)
ms$model_sources
m$allocation
modelSources <- function(mcmc, data)#
{#
groups <- apply(mcmc$allocation,1,which.max)#
n_groups <- length(unique(groups))#
sources_found <- data.frame(matrix(rep(NA,2*n_groups),ncol=2))#
for(i in 1:n_groups)#
{#
	sources_found[i,] <- complete.cases(c(mean(d$longitude[which(groups==i)]),mean(d$latitude[which(groups==i)])))#
}#
model_sources <- geoDataSource(sources_found[,1], sources_found[,2])#
names(model_sources) <- c("model_source_lon","model_source_lat")#
return(list(model_sources=model_sources,groups=groups))#
}
ms <- modelSources(mcmc = m, data = d)
ms
modelSources <- function(mcmc, data)#
{#
groups <- apply(mcmc$allocation,1,which.max)#
n_groups <- length(unique(groups))#
sources_found <- data.frame(matrix(rep(NA,2*n_groups),ncol=2))#
for(i in 1:n_groups)#
{#
	sources_found[i,] <- c(mean(d$longitude[which(groups==i)]),mean(d$latitude[which(groups==i)]))#
}#
sources_found <- sources_found[complete.cases(sources_found),]#
#
model_sources <- geoDataSource(sources_found[,1], sources_found[,2])#
names(model_sources) <- c("model_source_lon","model_source_lat")#
return(list(model_sources=model_sources,groups=groups))#
}
ms <- modelSources(mcmc = m, data = d)
ms
geoPlotMap(data = d, source = ms, params = p, breakPercent = seq(0, 10, 1), mapType = "roadmap",#
contourCols =c("red", "orange","yellow","white"), crimeCol = "black", crimeCex = 2, #
sourceCol = "red", sourceCex = 2, surface = m$geoProfile,gpLegend=TRUE,opacity=0.4)
geoPlotMap(data = d, source = ms$model_sources, params = p, breakPercent = seq(0, 10, 1), mapType = "roadmap",#
contourCols =c("red", "orange","yellow","white"), crimeCol = "black", crimeCex = 2, #
sourceCol = "red", sourceCex = 2, surface = m$geoProfile,gpLegend=TRUE,opacity=0.4)
ms
geoPlotMap(data = d, source = ms$model_sources, params = p, breakPercent = seq(0, 10, 1), mapType = "roadmap",
geoPlotMap(data = d, source = ms$model_sources, params = p, breakPercent = seq(0, 10, 1), mapType = "roadmap",#
contourCols =c("red", "orange","yellow","white"), crimeCol = "black", crimeCex = 2, #
sourceCol = "red", sourceCex = 2, surface = m$geoProfile,gpLegend=TRUE,opacity=0.4)
str(s)
str(ms$model_sources)
geoPlotMap(data = d, source = ms$model_sources, params = p, breakPercent = seq(0, 10, 1), mapType = "roadmap",contourCols =c("red", "orange","yellow","white"), crimeCol = "black", crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = m$geoProfile,gpLegend=TRUE,opacity=0.4)
d
modelSources <- function(mcmc, data)#
{#
groups <- apply(mcmc$allocation,1,which.max)#
n_groups <- length(unique(groups))#
sources_found <- data.frame(matrix(rep(NA,2*n_groups),ncol=2))#
for(i in 1:n_groups)#
{#
	sources_found[i,] <- c(mean(d$longitude[which(groups==i)]),mean(d$latitude[which(groups==i)]))#
}#
sources_found <- sources_found[complete.cases(sources_found),]#
#
model_sources <- geoDataSource(sources_found[,1], sources_found[,2])#
names(model_sources) <- c("model_source_lon","model_source_lat")#
return(model_sources)#
}#
ms#
geoPlotMap(data = d, source = ms$model_sources, params = p, breakPercent = seq(0, 10, 1), mapType = "roadmap",contourCols =c("red", "orange","yellow","white"), crimeCol = "black", crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = m$geoProfile,gpLegend=TRUE,opacity=0.4)#
str(s)#
str(ms$model_sources)
ms <- modelSources(mcmc = m, data = d)
ms
geoPlotMap(data = d, source = ms, params = p, breakPercent = seq(0, 10, 1), mapType = "roadmap",contourCols =c("red", "orange","yellow","white"), crimeCol = "black", crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = m$geoProfile,gpLegend=TRUE,opacity=0.4)
modelSources <- function(mcmc, data)#
{#
groups <- apply(mcmc$allocation,1,which.max)#
n_groups <- length(unique(groups))#
sources_found <- data.frame(matrix(rep(NA,2*n_groups),ncol=2))#
for(i in 1:n_groups)#
{#
	sources_found[i,] <- c(mean(d$longitude[which(groups==i)]),mean(d$latitude[which(groups==i)]))#
}#
sources_found <- sources_found[complete.cases(sources_found),]#
#
model_sources <- geoDataSource(sources_found[,1], sources_found[,2])#
return(model_sources)#
}#
ms <- modelSources(mcmc = m, data = d)#
ms
geoPlotMap(data = d, source = ms, params = p, breakPercent = seq(0, 10, 1), mapType = "roadmap",contourCols =c("red", "orange","yellow","white"), crimeCol = "black", crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = m$geoProfile,gpLegend=TRUE,opacity=0.4)
modelSources <- function(mcmc, data)#
{#
groups <- apply(mcmc$allocation,1,which.max)#
n_groups <- length(unique(groups))#
sources_found <- data.frame(matrix(rep(NA,2*n_groups),ncol=2))#
for(i in 1:n_groups)#
{#
	sources_found[i,] <- c(mean(d$longitude[which(groups==i)]),mean(d$latitude[which(groups==i)]))#
}#
sources_found <- sources_found[complete.cases(sources_found),]#
#
model_sources <- geoDataSource(sources_found[,1], sources_found[,2])#
return(list(model_sources = model_sources,groups = groups))#
}
ms <- modelSources(mcmc = m, data = d)
ms
geoPlotMap(data = d, source = ms$model_sources, params = p, breakPercent = seq(0, 10, 1), mapType = "roadmap",contourCols =c("red", "orange","yellow","white"), crimeCol = "black", crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = m$geoProfile,gpLegend=TRUE,opacity=0.4)
rm(list=ls())
library(devtools)
install.packages("~/GitHub/Rgeoprofile", repos = NULL, type = "source")
?modelSources
document()
modelSources
document()
library(devtools)
document()
library(devtools)
document()
?modelSources
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=10, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
s <- geoDataSource(sim$source_lon, sim$source_lat)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2)#
m <- geoMCMC(data = d, params = p)#
# extract sources identified by the model#
ms <- modelSources(mcmc = m, data = d)#
# plot data showing the sources identified by the model (note: NOT the actual suspect sites)#
geoPlotMap(data = d, source = ms$model_sources, params = p, breakPercent = seq(0, 10, 1), #
mapType = "roadmap", contourCols =c("red", "orange","yellow","white"), crimeCol = "black",#
crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = m$geoProfile, gpLegend=TRUE,#
opacity = 0.4)
ms
comlete.cases(sources_found)
complete.cases(sources_found)
modelSources <- function(mcmc, data)#
{#
groups <- apply(mcmc$allocation,1,which.max)#
n_groups <- length(unique(groups))#
sources_found <- data.frame(matrix(rep(NA,2*n_groups),ncol=2))#
for(i in 1:n_groups)#
{#
	sources_found[i,] <- c(mean(d$longitude[which(groups==i)]),mean(d$latitude[which(groups==i)]))#
}#
sources_found  <- sources_found[complete.cases(sources_found),]#
model_sources <- geoDataSource(sources_found[,1], sources_found[,2])#
return(list(model_sources=model_sources,groups=groups))#
}
ms <- modelSources(mcmc = m, data = d)
ms
geoPlotMap(data = d, source = ms$model_sources, params = p, breakPercent = seq(0, 10, 1), #
+ mapType = "roadmap", contourCols =c("red", "orange","yellow","white"), crimeCol = "black",#
+ crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = m$geoProfile, gpLegend=TRUE,#
+ opacity = 0.4)
geoPlotMap(data = d, source = ms$model_sources, params = p, breakPercent = seq(0, 10, 1), mapType = "roadmap", contourCols =c("red", "orange","yellow","white"), crimeCol = "black",crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = m$geoProfile, gpLegend=TRUE,opacity = 0.4)
ms
order(groups)
order(ms$groups)
modelSources <- function(mcmc, data)#
{#
groups <- apply(mcmc$allocation,1,which.max)#
n_groups <- length(unique(groups))#
sources_found <- data.frame(matrix(rep(NA,4*n_groups),ncol=2))#
for(i in 1:n_groups)#
{#
	sources_found[i,] <- c(mean(d$longitude[which(groups==i)]),mean(d$latitude[which(groups==i)]))#
}#
sources_found  <- sources_found[complete.cases(sources_found),]#
model_sources <- geoDataSource(sources_found[,1], sources_found[,2])#
return(list(model_sources=model_sources,groups=groups))#
}
ms <- modelSources(mcmc = m, data = d)
ms
mcmc <- m#
data <- d
groups <- apply(mcmc$allocation,1,which.max)
groups
n_groups <- length(unique(groups))
n_groups
sources_found <- data.frame(matrix(rep(NA,4*n_groups),ncol=2))
sources_found
modelSources <- function(mcmc, data)#
{#
groups <- apply(mcmc$allocation,1,which.max)#
n_groups <- length(unique(groups))#
sources_found <- data.frame(matrix(rep(NA,4*n_groups),ncol=2))#
for(i in 1:7)#
{#
	sources_found[i,] <- c(mean(d$longitude[which(groups==i)]),mean(d$latitude[which(groups==i)]))#
}#
sources_found  <- sources_found[complete.cases(sources_found),]#
model_sources <- geoDataSource(sources_found[,1], sources_found[,2])#
return(list(model_sources=model_sources,groups=groups))#
}
groups <- apply(mcmc$allocation,1,which.max)#
n_groups <- length(unique(groups))#
sources_found <- data.frame(matrix(rep(NA,4*n_groups),ncol=2))#
for(i in 1:7)#
{#
	sources_found[i,] <- c(mean(d$longitude[which(groups==i)]),mean(d$latitude[which(groups==i)]))#
}#
sources_found  <- sources_found[complete.cases(sources_found),]#
model_sources <- geoDataSource(sources_found[,1], sources_found[,2])#
return(list(model_sources=model_sources,groups=groups))
model_sources
group_IDs <- unique(groups)
group_IDs
mcmc <- m#
data <- d
groups <- apply(mcmc$allocation,1,which.max)#
group_IDs <- unique(groups)#
n_groups <- length(group_IDs)#
sources_found <- data.frame(matrix(rep(NA,4*n_groups),ncol=2))#
for(i in 1:n_groups)#
{#
	sources_found[i,] <- c(mean(d$longitude[which(groups== group_IDs[i])]),mean(d$latitude[which(groups== group_IDs[i])]))#
}#
sources_found  <- sources_found[complete.cases(sources_found),]#
model_sources <- geoDataSource(sources_found[,1], sources_found[,2])
model_sources
sources_found
group_IDs
groups <- apply(mcmc$allocation,1,which.max)#
group_IDs <- unique(groups)#
n_groups <- length(group_IDs)#
sources_found <- data.frame(matrix(rep(NA,4*n_groups),ncol=2))#
for(i in 1:10)#
{#
	sources_found[i,] <- c(mean(d$longitude[which(groups==group_IDs[i])]),mean(d$latitude[which(groups== group_IDs[i])]))#
}#
sources_found  <- sources_found[complete.cases(sources_found),]#
model_sources <- geoDataSource(sources_found[,1], sources_found[,2])
model_sources
n_groups
group_IDs
group_IDs[5]
library(devtools)
document()
?modelSources
library(RgeoProfile)
# simulated data#
sim <-rDPM(50, priorMean_longitude = -0.04217491, priorMean_latitude = #
51.5235505, alpha=10, sigma=1, tau=3)#
d <- geoData(sim$longitude, sim $latitude)#
s <- geoDataSource(sim$source_lon, sim$source_lat)#
p <- geoParams(data = d, sigma_mean = 1.0, sigma_squared_shape = 2)#
m <- geoMCMC(data = d, params = p)#
# extract sources identified by the model#
ms <- modelSources(mcmc = m, data = d)#
# plot data showing the sources identified by the model (note: NOT the actual suspect sites)#
geoPlotMap(data = d, source = ms$model_sources, params = p, breakPercent = seq(0, 10, 1), #
mapType = "roadmap", contourCols =c("red", "orange","yellow","white"), crimeCol = "black",#
crimeCex = 2, sourceCol = "red", sourceCex = 2, surface = m$geoProfile, gpLegend=TRUE,#
opacity = 0.4)
