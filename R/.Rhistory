nbcol <- 100#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border="gray",box=FALSE)
#_________________________________#
# TEST#
#_________________________________#
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x, y) { r <- sqrt(x^2+y^4); 10 * sin(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
#
cut_test <- z#
#
persp(cut_test, phi = 30, theta = -90)#
#
dim(cut_test)#
persp(cut_test, phi = 30, theta = -30,border="gray")#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border="gray",box=FALSE)
#_________________________________#
# TEST#
#_________________________________#
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
#
cut_test <- z#
#
persp(cut_test, phi = 30, theta = -90)#
#
dim(cut_test)#
persp(cut_test, phi = 30, theta = -30,border="gray")#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border="gray",box=FALSE)
#_________________________________#
# TEST#
#_________________________________#
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * tan(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
#
cut_test <- z#
#
persp(cut_test, phi = 30, theta = -90)#
#
dim(cut_test)#
persp(cut_test, phi = 30, theta = -30,border="gray")#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border="gray",box=FALSE)
#_________________________________#
# TEST#
#_________________________________#
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * cos(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
#
cut_test <- z#
#
persp(cut_test, phi = 30, theta = -90)#
#
dim(cut_test)#
persp(cut_test, phi = 30, theta = -30,border="gray")#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border="gray",box=FALSE)
#_________________________________#
# TEST#
#_________________________________#
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
#
cut_test <- z#
#
persp(cut_test, phi = 30, theta = -90)#
#
dim(cut_test)#
persp(cut_test, phi = 30, theta = -30,border="gray")#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border="gray",box=FALSE)
#_________________________________#
# TEST#
#_________________________________#
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
#
cut_test <- z#
#
persp(cut_test, phi = 30, theta = -90)#
#
dim(cut_test)#
persp(cut_test, phi = 30, theta = -30,border="gray")#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("red","orange","blue","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border="gray",box=FALSE)
#_________________________________#
# TEST#
#_________________________________#
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
#
cut_test <- z#
#
persp(cut_test, phi = 30, theta = -90)#
#
dim(cut_test)#
persp(cut_test, phi = 30, theta = -30,border="gray")#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("red","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border="gray",box=FALSE)
#_________________________________#
# TEST#
#_________________________________#
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
#
cut_test <- z#
#
persp(cut_test, phi = 30, theta = -90)#
#
dim(cut_test)#
persp(cut_test, phi = 30, theta = -30,border="gray")#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border="gray",box=FALSE)
gp.colors <- colorRampPalette( c("darkred","red","orange","yellow","white") )
#_________________________________#
# TEST#
#_________________________________#
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
#
cut_test <- z#
#
persp(cut_test, phi = 30, theta = -90)#
#
dim(cut_test)#
persp(cut_test, phi = 30, theta = -30,border="gray")#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("darkred","red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border="gray",box=FALSE)
#_________________________________#
# TEST#
#_________________________________#
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
#
cut_test <- z#
#
persp(cut_test, phi = 30, theta = -90)#
#
dim(cut_test)#
persp(cut_test, phi = 30, theta = -30,border="gray")#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border="gray",box=FALSE)
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
op <- par(bg = "white")#
persp(x, y, z, theta = 30, phi = 30)#
persp(x, y, z, theta = 30, phi = 30,col="gray")#
persp(x, y, z, theta = 30, phi = 30,col="gray",border=NA)#
persp(x, y, z, theta = 30, phi = 30,col="gray",lwd=0.1)#
persp(x, y, z, theta = 30, phi = 30,border="black",lwd=0.2,col="lightblue")#
persp(x, y, z, theta = 30, phi = 30,border="black",lwd=0.2,col="lightblue",ltheta=100,lphi=20,shade=0.95)#
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")#
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",ltheta = 120, shade = 0.75, ticktype = "detailed",xlab = "X", ylab = "Y", zlab = "Sinc( r )")#
par(bg = "white")#
#
nrz <- nrow(z)#
ncz <- ncol(z)#
# Create a function interpolating colors in the range of specified colors#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
# Compute the z-value at the facet centres#
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]#
#
# Recode facet z-values into color indices#
facetcol <- cut(zfacet, nbcol)#
persp(z, col = color[facetcol], phi = 30, theta = -30)#
test_Geoprofile <- read.table("~/Desktop/DPM_C/Other files/geoprofile.txt",header=FALSE)#
#
class(test_Geoprofile)#
str(test_Geoprofile)#
#
new <- matrix(rep(NA,90000),ncol=300)#
for(x in 1:300)#
{#
for(y in 1:300)#
{#
new[x,y] <- as.numeric(test_Geoprofile[x,y])#
}#
}#
persp(new,border=NA,col="gray")#
#
nrz <- nrow(300)#
ncz <- ncol(300)#
#
nrz <- nrow(z)#
ncz <- ncol(z)#
# Create a function interpolating colors in the range of specified colors#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 5#
color <- gp.colors(nbcol)#
facetcol <- cut(new, nbcol)#
persp(new, col = color[facetcol], phi = 30, theta = -30,border=NA)#
test2 <- matrix(rep(1:10,10),ncol=10)#
test3 <- matrix(1:100,ncol=10)#
# Create a function interpolating colors in the range of specified colors#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 10#
color <- gp.colors(nbcol)#
facetcol <- cut(c(t(test2)), nbcol)#
test2#
facetcol#
c(t(test3))#
#
persp(test2, col = color[facetcol], phi = 30, theta = -30,border=NA)#
test_Geoprofile <- read.table("~/Desktop/DPM_C/Other files/geoprofile.txt",header=FALSE)#
str(test_Geoprofile)#
dim(test_Geoprofile)#
test_Geoprofile[[1,1]]#
matrix_Geoprofile <- matrix(rep(NA,300^2),ncol=300)#
for(x in 1:300)#
{#
for(y in 1:300)#
matrix_Geoprofile[x,y] <- test_Geoprofile[[x,y]]#
}#
persp(matrix_Geoprofile,phi = 30, theta = -30,border=NA,col="gray")#
#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
facetcol <- cut(matrix_Geoprofile, nbcol)#
persp(matrix_Geoprofile, phi = 30, theta = -30,border=NA,col=facetcol)#
#_________________________________#
# TEST#
#_________________________________#
cut_test <- matrix(rep(1:16,16),ncol=16,byrow=TRUE)#
persp(cut_test)#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 10#
color <- gp.colors(nbcol)#
#
facetcol <- cut(cut_test, nbcol)#
#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border=NA)#
#
cut_test#
facetcol#
#
temp2 <- as.numeric(unlist(as.list(cut_test),recursive=TRUE,use.names=FALSE))#
str(temp2)#
#_________________________________#
#
test_Geoprofile <- read.table("~/Desktop/DPM_C/geoprofile.txt",header=FALSE)#
to_plot <- matrix(rep(NA,90000),ncol=300)#
for(i in 1:300)#
{#
for(j in 1:300)#
{#
to_plot[i,j] <- test_Geoprofile[[i,j]]#
}#
}#
dim(to_plot)#
# Create a function interpolating colors in the range of specified colors#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
# Compute the z-value at the facet centres#
zfacet <- to_plot[-1, -1] + to_plot[-1, -ncz] + to_plot[-nrz, -1] + to_plot[-nrz, -ncz]#
#
# Recode facet z-values into color indices#
facetcol <- cut(zfacet, nbcol)#
persp(to_plot, col = color[facetcol], phi = 30, theta = -140,border=NA)#
persp(to_plot)#
#_________________________________#
# TEST#
#_________________________________#
cut_test <- matrix(rep(1:16,32),ncol=32,byrow=TRUE)#
dim(cut_test)#
persp(cut_test, phi = 30, theta = -30,border="gray")#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 10#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -60,border=NA,box=FALSE)#
#
#_________________________________#
# TEST#
#_________________________________#
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
#
cut_test <- z#
#
persp(cut_test, phi = 30, theta = -90)#
#
dim(cut_test)#
persp(cut_test, phi = 30, theta = -30,border="gray")#
class(cut_test)#
str(cut_test)#
gp.colors <- colorRampPalette( c("red","orange","yellow","white") )#
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- gp.colors(nbcol)#
#
ncz <- dim(cut_test)[2]#
nrz <- dim(cut_test)[1]#
# Compute the z-value at the facet centres#
zfacet <- cut_test[-1, -1] + cut_test[-1, -ncz] + cut_test[-nrz, -1] + cut_test[-nrz, -ncz]#
#
facetcol <- cut(zfacet, nbcol)#
#
par(mar=c(1,1,1,1))#
persp(cut_test,col = color[facetcol], phi = 30, theta = -30,border="gray",box=FALSE)
library(rmarkdown)
