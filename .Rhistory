hs <- geoReportHitscores(params = params, source = source, surface =m$geoProfile)
hs
# produce Lorenz plot
Gini <- geoPlotLorenz(hit_scores = hs)
Gini
# find centroids of data split by best grouping (placeholder for more thorough method)
geoModelSources(mcmc = m, data = data)
# compare to geoprofile based on ring search strategy
surface_ring <- geoRing(params = params, data = data, source = source, mcmc = m)
gp_ring <- geoProfile(surface = surface_ring)
# map of ring search geoprofile
map4 <- geoPlotMap(params = params, data = data, source = source, surface = gp_ring, opacity = 1, breakPercent = seq(0,50,l=21))
map4
# hitscores of ring search geoprofile
hs_ring <- geoReportHitscores(params = params, source = source, surface = gp_ring)
hs_ring
# Lorenz plot based on ring hitscores
Gini <- geoPlotLorenz(hit_scores = hs_ring)
Gini
# read in north London shapefile as mask
north_london_mask <- geoShapefile()
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="inside", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
# read in data and sources
setwd("~/Desktop/RgeoProfile")
d_raw <- read.table("MalariaCases139.txt")
d <- geoData(d_raw[,1], d_raw[,2])
s_raw <- read.table("allvectors.txt")
s <- geoDataSource(s_raw[,1], s_raw[,2])
# define parameters
p <- geoParams(d, s, sigma_var = 1)
# run MCMC
m = geoMCMC(data = d, params = p)
# read in shapefile and plot to check orientation
setwd("~/Desktop")
shp <- geoShapefile(fileName="RgeoProfile/cairo_egypt.imposm-shapefiles")
sp::plot(shp)
# mask posterior surface
prob_masked <- geoMask(m$posteriorSurface, p, shp, operation = "outside")
# convert to geoprofile
gp_masked <- geoProfile(prob_masked$prob)
# plot map of masked geoprofile
map1 <- geoPlotMap(p, d, s, gp_masked)
map1
prob_masked <- geoMask(m$posteriorSurface, p, shp, operation = "inside")
# convert to geoprofile
gp_masked <- geoProfile(prob_masked$prob)
# plot map of masked geoprofile
map1 <- geoPlotMap(p, d, s, gp_masked)
map1
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
p <- geoParams(d, s, sigma_var = 1, burnin = 1e2, samples = 1e2)
# read in data and sources
setwd("~/Desktop/RgeoProfile")
d_raw <- read.table("MalariaCases139.txt")
d <- geoData(d_raw[,1], d_raw[,2])
s_raw <- read.table("allvectors.txt")
s <- geoDataSource(s_raw[,1], s_raw[,2])
# define parameters
p <- geoParams(d, s, sigma_var = 1, burnin = 1e2, samples = 1e2)
# run MCMC
m = geoMCMC(data = d, params = p)
# read in shapefile and plot to check orientation
setwd("~/Desktop")
shp <- geoShapefile(fileName="RgeoProfile/cairo_egypt.imposm-shapefiles")
sp::plot(shp)
# mask posterior surface
prob_masked <- geoMask(m$posteriorSurface, p, shp, operation = "inside")
# convert to geoprofile
gp_masked <- geoProfile(prob_masked$prob)
# plot map of masked geoprofile
map1 <- geoPlotMap(p, d, s, gp_masked)
map1
# read in data and sources
setwd("~/Desktop/RgeoProfile")
d_raw <- read.table("MalariaCases139.txt")
d <- geoData(d_raw[,1], d_raw[,2])
s_raw <- read.table("allvectors.txt")
s <- geoDataSource(s_raw[,1], s_raw[,2])
# define parameters
p <- geoParams(d, s, sigma_var = 1, burnin = 1e2, samples = 1e2)
# run MCMC
m = geoMCMC(data = d, params = p, lambda = 0.2)
# read in shapefile and plot to check orientation
setwd("~/Desktop")
shp <- geoShapefile(fileName="RgeoProfile/cairo_egypt.imposm-shapefiles")
sp::plot(shp)
# mask posterior surface
prob_masked <- geoMask(m$posteriorSurface, p, shp, operation = "inside", scaleValue = 2)
# convert to geoprofile
gp_masked <- geoProfile(prob_masked$prob)
# plot map of masked geoprofile
map1 <- geoPlotMap(p, d, s, gp_masked)
map1
prob_masked <- geoMask(m$posteriorSurface, p, shp, operation = "inside", scaleValue = 100)
# convert to geoprofile
gp_masked <- geoProfile(prob_masked$prob)
# plot map of masked geoprofile
map1 <- geoPlotMap(p, d, s, gp_masked)
map1
# mask posterior surface
prob_masked <- geoMask(m$posteriorSurface, p, shp, operation = "outside", scaleValue = 100)
# convert to geoprofile
gp_masked <- geoProfile(prob_masked$prob)
# plot map of masked geoprofile
map1 <- geoPlotMap(p, d, s, gp_masked)
map1
# Rgeoprofile_deploy.R
# Author: Bob Verity
# Date: 2017-05-26
# Purpose:
# Tests and demonstrates use of RgeoProfile package.
# ------------------------------------------------------------------
library(devtools)
# RStudio shortcuts:
#    cmd+shift+L     : load_all
#    cmd+shift+D     : document (NB, option must be activated in Build Tools)
#    cmd+shift+E     : check
# check('.', args="--no-examples")  # check without running examples
# ------------------------------------------------------------------
#set.seed(1)
# choose data and sources from options above
data <- LondonExample_crimes
source <- LondonExample_sources
# set model and MCMC parameters
params = geoParams(data = data, sigma_mean = sigma_mean, sigma_var = NULL, sigma_squared_shape = 2, chains = 5, burnin = 1e3, samples = 1e4, longitude_cells = 200, latitude_cells = 200)
# run MCMC
m = geoMCMC(data = data, params = params)
# read in north London shapefile as mask
north_london_mask <- geoShapefile()
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="inside", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="far", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
# Rgeoprofile_deploy.R
# Author: Bob Verity
# Date: 2017-05-26
# Purpose:
# Tests and demonstrates use of RgeoProfile package.
# ------------------------------------------------------------------
library(devtools)
# RStudio shortcuts:
#    cmd+shift+L     : load_all
#    cmd+shift+D     : document (NB, option must be activated in Build Tools)
#    cmd+shift+E     : check
# check('.', args="--no-examples")  # check without running examples
# ------------------------------------------------------------------
#set.seed(1)
# choose data and sources from options above
data <- LondonExample_crimes
source <- LondonExample_sources
# set model and MCMC parameters
params = geoParams(data = data, sigma_mean = sigma_mean, sigma_var = NULL, sigma_squared_shape = 2, chains = 5, burnin = 1e3, samples = 1e4, longitude_cells = 200, latitude_cells = 200)
# run MCMC
m = geoMCMC(data = data, params = params)
# read in north London shapefile as mask
north_london_mask <- geoShapefile()
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="far", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
# Rgeoprofile_deploy.R
# Author: Bob Verity
# Date: 2017-05-26
# Purpose:
# Tests and demonstrates use of RgeoProfile package.
# ------------------------------------------------------------------
library(devtools)
# RStudio shortcuts:
#    cmd+shift+L     : load_all
#    cmd+shift+D     : document (NB, option must be activated in Build Tools)
#    cmd+shift+E     : check
# check('.', args="--no-examples")  # check without running examples
# ------------------------------------------------------------------
#set.seed(1)
# choose data and sources from options above
data <- LondonExample_crimes
source <- LondonExample_sources
# set model and MCMC parameters
params = geoParams(data = data, sigma_mean = sigma_mean, sigma_var = NULL, sigma_squared_shape = 2, chains = 5, burnin = 1e3, samples = 1e4, longitude_cells = 200, latitude_cells = 200)
# run MCMC
m = geoMCMC(data = data, params = params, lambda = 0.1)
# read in north London shapefile as mask
north_london_mask <- geoShapefile()
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="far", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
# Rgeoprofile_deploy.R
# Author: Bob Verity
# Date: 2017-05-26
# Purpose:
# Tests and demonstrates use of RgeoProfile package.
# ------------------------------------------------------------------
library(devtools)
# RStudio shortcuts:
#    cmd+shift+L     : load_all
#    cmd+shift+D     : document (NB, option must be activated in Build Tools)
#    cmd+shift+E     : check
# check('.', args="--no-examples")  # check without running examples
# ------------------------------------------------------------------
#set.seed(1)
# choose data and sources from options above
data <- LondonExample_crimes
source <- LondonExample_sources
# set model and MCMC parameters
params = geoParams(data = data, sigma_mean = sigma_mean, sigma_var = NULL, sigma_squared_shape = 2, chains = 5, burnin = 1e3, samples = 1e4, longitude_cells = 200, latitude_cells = 200)
# run MCMC
m = geoMCMC(data = data, params = params, lambda = 0.1)
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
# Rgeoprofile_deploy.R
# Author: Bob Verity
# Date: 2017-05-26
# Purpose:
# Tests and demonstrates use of RgeoProfile package.
# ------------------------------------------------------------------
library(devtools)
# RStudio shortcuts:
#    cmd+shift+L     : load_all
#    cmd+shift+D     : document (NB, option must be activated in Build Tools)
#    cmd+shift+E     : check
# check('.', args="--no-examples")  # check without running examples
# ------------------------------------------------------------------
#set.seed(1)
# choose data and sources from options above
data <- LondonExample_crimes
source <- LondonExample_sources
# set model and MCMC parameters
params = geoParams(data = data, sigma_mean = sigma_mean, sigma_var = NULL, sigma_squared_shape = 2, chains = 5, burnin = 1e3, samples = 1e4, longitude_cells = 200, latitude_cells = 200)
# run MCMC
m = geoMCMC(data = data, params = params, lambda = 0.1)
north_london_mask <- geoShapefile()
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="far", scaleValue=1)
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
# Rgeoprofile_deploy.R
# Author: Bob Verity
# Date: 2017-05-26
# Purpose:
# Tests and demonstrates use of RgeoProfile package.
# ------------------------------------------------------------------
library(devtools)
# RStudio shortcuts:
#    cmd+shift+L     : load_all
#    cmd+shift+D     : document (NB, option must be activated in Build Tools)
#    cmd+shift+E     : check
# check('.', args="--no-examples")  # check without running examples
# ------------------------------------------------------------------
#set.seed(1)
# choose data and sources from options above
data <- LondonExample_crimes
source <- LondonExample_sources
# set model and MCMC parameters
params = geoParams(data = data, sigma_mean = sigma_mean, sigma_var = NULL, sigma_squared_shape = 2, chains = 5, burnin = 1e3, samples = 1e4, longitude_cells = 200, latitude_cells = 200)
# run MCMC
m = geoMCMC(data = data, params = params, lambda = 0.1)
# read in north London shapefile as mask
north_london_mask <- geoShapefile()
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="far", scaleValue=1)
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
# Rgeoprofile_deploy.R
# Author: Bob Verity
# Date: 2017-05-26
# Purpose:
# Tests and demonstrates use of RgeoProfile package.
# ------------------------------------------------------------------
library(devtools)
# RStudio shortcuts:
#    cmd+shift+L     : load_all
#    cmd+shift+D     : document (NB, option must be activated in Build Tools)
#    cmd+shift+E     : check
# check('.', args="--no-examples")  # check without running examples
# ------------------------------------------------------------------
#set.seed(1)
# choose data and sources from options above
data <- LondonExample_crimes
source <- LondonExample_sources
# set model and MCMC parameters
params = geoParams(data = data, sigma_mean = sigma_mean, sigma_var = NULL, sigma_squared_shape = 2, chains = 5, burnin = 1e3, samples = 1e4, longitude_cells = 200, latitude_cells = 200)
# run MCMC
m = geoMCMC(data = data, params = params, lambda = 0.1)
# read in north London shapefile as mask
north_london_mask <- geoShapefile()
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="far", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
map5
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
# Rgeoprofile_deploy.R
# Author: Bob Verity
# Date: 2017-05-26
# Purpose:
# Tests and demonstrates use of RgeoProfile package.
# ------------------------------------------------------------------
library(devtools)
# RStudio shortcuts:
#    cmd+shift+L     : load_all
#    cmd+shift+D     : document (NB, option must be activated in Build Tools)
#    cmd+shift+E     : check
# check('.', args="--no-examples")  # check without running examples
# ------------------------------------------------------------------
#set.seed(1)
# choose data and sources from options above
data <- LondonExample_crimes
source <- LondonExample_sources
# set model and MCMC parameters
params = geoParams(data = data, sigma_mean = sigma_mean, sigma_var = NULL, sigma_squared_shape = 2, chains = 5, burnin = 1e3, samples = 1e4, longitude_cells = 200, latitude_cells = 200)
# run MCMC
m = geoMCMC(data = data, params = params, lambda = 0.1)
# read in north London shapefile as mask
north_london_mask <- geoShapefile()
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="far", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
# Rgeoprofile_deploy.R
# Author: Bob Verity
# Date: 2017-05-26
# Purpose:
# Tests and demonstrates use of RgeoProfile package.
# ------------------------------------------------------------------
library(devtools)
# RStudio shortcuts:
#    cmd+shift+L     : load_all
#    cmd+shift+D     : document (NB, option must be activated in Build Tools)
#    cmd+shift+E     : check
# check('.', args="--no-examples")  # check without running examples
# ------------------------------------------------------------------
#set.seed(1)
# choose data and sources from options above
data <- LondonExample_crimes
source <- LondonExample_sources
# set model and MCMC parameters
params = geoParams(data = data, sigma_mean = sigma_mean, sigma_var = NULL, sigma_squared_shape = 2, chains = 5, burnin = 1e3, samples = 1e4, longitude_cells = 200, latitude_cells = 200)
# run MCMC
m = geoMCMC(data = data, params = params, lambda = 0.1)
# read in north London shapefile as mask
north_london_mask <- geoShapefile()
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="far", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
# Rgeoprofile_deploy.R
# Author: Bob Verity
# Date: 2017-05-26
# Purpose:
# Tests and demonstrates use of RgeoProfile package.
# ------------------------------------------------------------------
library(devtools)
# RStudio shortcuts:
#    cmd+shift+L     : load_all
#    cmd+shift+D     : document (NB, option must be activated in Build Tools)
#    cmd+shift+E     : check
# check('.', args="--no-examples")  # check without running examples
# ------------------------------------------------------------------
#set.seed(1)
# choose data and sources from options above
data <- LondonExample_crimes
source <- LondonExample_sources
# set model and MCMC parameters
params = geoParams(data = data, sigma_mean = sigma_mean, sigma_var = NULL, sigma_squared_shape = 2, chains = 5, burnin = 1e3, samples = 1e4, longitude_cells = 200, latitude_cells = 200)
# run MCMC
m = geoMCMC(data = data, params = params, lambda = 0.1)
# read in north London shapefile as mask
north_london_mask <- geoShapefile()
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="far", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="near", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="near", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
# Rgeoprofile_deploy.R
# Author: Bob Verity
# Date: 2017-05-26
# Purpose:
# Tests and demonstrates use of RgeoProfile package.
# ------------------------------------------------------------------
library(devtools)
# RStudio shortcuts:
#    cmd+shift+L     : load_all
#    cmd+shift+D     : document (NB, option must be activated in Build Tools)
#    cmd+shift+E     : check
# check('.', args="--no-examples")  # check without running examples
# ------------------------------------------------------------------
#set.seed(1)
# choose data and sources from options above
data <- LondonExample_crimes
source <- LondonExample_sources
# set model and MCMC parameters
params = geoParams(data = data, sigma_mean = sigma_mean, sigma_var = NULL, sigma_squared_shape = 2, chains = 5, burnin = 1e3, samples = 1e4, longitude_cells = 200, latitude_cells = 200)
# run MCMC
m = geoMCMC(data = data, params = params, lambda = 0.1)
# read in north London shapefile as mask
north_london_mask <- geoShapefile()
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="far", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
# Rgeoprofile_deploy.R
# Author: Bob Verity
# Date: 2017-05-26
# Purpose:
# Tests and demonstrates use of RgeoProfile package.
# ------------------------------------------------------------------
library(devtools)
# RStudio shortcuts:
#    cmd+shift+L     : load_all
#    cmd+shift+D     : document (NB, option must be activated in Build Tools)
#    cmd+shift+E     : check
# check('.', args="--no-examples")  # check without running examples
# ------------------------------------------------------------------
#set.seed(1)
# choose data and sources from options above
data <- LondonExample_crimes
source <- LondonExample_sources
# set model and MCMC parameters
params = geoParams(data = data, sigma_mean = sigma_mean, sigma_var = NULL, sigma_squared_shape = 2, chains = 5, burnin = 1e3, samples = 1e4, longitude_cells = 200, latitude_cells = 200)
# run MCMC
m = geoMCMC(data = data, params = params, lambda = 0.1)
# read in north London shapefile as mask
north_london_mask <- geoShapefile()
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="far", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="far", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
# mask posterior surface and geoprofile
prob_masked <- geoMask(m$posteriorSurface, params, north_london_mask, operation="near", scaleValue=1)
gp_masked <- geoProfile(prob_masked$prob)
# plot masked map
map5 <- geoPlotMap(params, data=data, source=source, surface=gp_masked, opacity=0.8)
map5
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
# read in data and sources
setwd("~/Desktop/RgeoProfile")
d_raw <- read.table("MalariaCases139.txt")
d <- geoData(d_raw[,1], d_raw[,2])
s_raw <- read.table("allvectors.txt")
s <- geoDataSource(s_raw[,1], s_raw[,2])
# define parameters
p <- geoParams(d, s, sigma_var = 1, burnin = 1e2, samples = 1e2)
# run MCMC
m = geoMCMC(data = d, params = p, lambda = 0.2)
# read in shapefile and plot to check orientation
setwd("~/Desktop")
shp <- geoShapefile(fileName="RgeoProfile/cairo_egypt.imposm-shapefiles")
#sp::plot(shp)
# mask posterior surface
prob_masked <- geoMask(m$posteriorSurface, p, shp, operation = "outside", scaleValue = 100)
# convert to geoprofile
gp_masked <- geoProfile(prob_masked$prob)
# plot map of masked geoprofile
map1 <- geoPlotMap(p, d, s, gp_masked)
map1
prob_masked <- geoMask(m$posteriorSurface, p, shp, operation = "near", scaleValue = 100)
# convert to geoprofile
gp_masked <- geoProfile(prob_masked$prob)
# plot map of masked geoprofile
map1 <- geoPlotMap(p, d, s, gp_masked)
map1
devtools::load_all("~/Dropbox/Bob/Work/My Programs/Geoprofiling/RgeoProfile")
